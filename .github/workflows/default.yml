---
name: AnsibleCI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:  # run weekly, every monday 01:00
    - cron: '0 1 * * 1'

permissions: {}

jobs:
  build:

    permissions:
      contents: read
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - molecule_distro: 'almalinux:10-kitten'
            experimental: false
            suite: default
          - molecule_distro: 'rockylinux:9'
            experimental: false
            suite: default
          - molecule_distro: 'ubuntu:24.04'
            experimental: false
            suite: default
          - molecule_distro: 'ubuntu:22.04'
            experimental: false
            suite: default
          - molecule_distro: 'debian:13'
            experimental: false
            suite: default
          - molecule_distro: 'debian:12'
            experimental: false
            suite: default
    env:
      ANSIBLE_CALLBACKS_ENABLED: profile_tasks
      MOLECULE_NO_LOG: "false"
      ANSIBLE_ROLE: juju4.adduser
      ANSIBLE_SUITE: ${{ matrix.suite }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911  # tag=v2.13.0
        with:
          egress-policy: block
          allowed-endpoints: >
            auth.docker.io:443
            distro.ibiblio.org:80
            files.pythonhosted.org:443
            fosszone.csd.auth.gr:443
            fosszone.csd.auth.gr:80
            ftp.agdsn.de:443
            ftp.cc.uoc.gr:443
            ftp.fau.de:443
            ftp.halifax.rwth-aachen.de:443
            ftp.linux.cz:443
            ftp.lysator.liu.se:443
            ftp.sh.cvut.cz:443
            github.com:443
            mir01.syntis.net:443
            miroir.univ-lorraine.fr:443
            mirror.a1.mk:443
            mirror.accum.se:443
            mirror.bahnhof.net:443
            mirror.chpc.utah.edu:80
            mirror.cs.vt.edu:80
            mirror.eu.ossplanet.net:443
            mirror.hosthink.net:443
            mirror.in2p3.fr:443
            mirror.init7.net:443
            mirror.karneval.cz:443
            mirror.leitecastro.com:443
            mirror.leitecastro.com:80
            mirror.netsite.dk:443
            mirror.netzwerge.de:443
            mirror.nl.altushost.com:443
            mirror.nsc.liu.se:443
            mirror.plusline.net:443
            mirror.prolocation.net:443
            mirror.puzzle.ch:443
            mirror.raiolanetworks.com:443
            mirror.slu.cz:443
            mirror.team-host.ru:443
            mirror.telepoint.bg:443
            mirror.uv.es:443
            mirror.yandex.ru:443
            mirror1.hs-esslingen.de:443
            mirrors.dotsrc.org:443
            mirrors.hostiserver.com:443
            mirrors.melbourne.co.uk:443
            mirrors.neterra.net:443
            mirrors.nxthost.com:443
            mirrors.pidginhost.com:443
            mirrors.rit.edu:80
            mirrors.rockylinux.org:443
            mirrors.xtom.de:443
            plug-mirror.rcac.purdue.edu:443
            production.cloudflare.docker.com:443
            pypi.org:443
            quantum-mirror.hu:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            rocky-linux-europe-central2.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-north1.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-southwest1.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-west1.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-west2.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-west3.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-west4.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-west6.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-west8.production.gcp.mirrors.ctrliq.cloud:443
            rocky-linux-europe-west9.production.gcp.mirrors.ctrliq.cloud:80
            rocky.reloumirrors.net:443
            rocky.task.gda.pl:443
            rocky.task.gda.pl:80
            rockylinux.hi.no:443
            rockylinux.mirror.intermax.nl:443
            rockylinux.mirrors.ovh.net:443
            rockylinux.mirrorservice.org:443
            rockylinux.netforce.hosting:443
            rockylinux.volia.net:443
            us.mirrors.cicku.me:443
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # tag=v5.0.0
        with:
          path: ${{ env.ANSIBLE_ROLE }}
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # tag=v5.6.0
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          set -x
          python -m pip install --upgrade pip
          pip install molecule molecule-plugins docker ansible-lint flake8 testinfra ansible
          mkdir -p $HOME/.ansible/roles && ln -s $GITHUB_WORKSPACE/$ANSIBLE_ROLE $HOME/.ansible/roles/ || true
          [ -f molecule/${ANSIBLE_SUITE}/requirements.yml ] && ansible-galaxy install -r molecule/${ANSIBLE_SUITE}/requirements.yml || true
      - name: Fetch central settings repository
        run: |
          export settings_repo="https://raw.githubusercontent.com/juju4/ansible-ci-settings/main"
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE
          set -x
          curl -o requirements.txt "$settings_repo/requirements.txt"
          curl -o .ansible-lint "$settings_repo/.ansible-lint"
          curl -o .yamllint "$settings_repo/.yamllint"
          pip install -r requirements.txt
        continue-on-error: true
      - name: Environment
        run: |
          set -x
          ansible --version
          ansible-config dump --only-changed -t all
          ansible-galaxy collection list || true
          ansible-galaxy role list || true
          pwd
          env
          find -ls
      - name: Galaxy dependencies
        run: |
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-galaxy install --timeout 120 --verbose -r molecule/$ANSIBLE_SUITE/requirements.yml
        continue-on-error: true
      - name: run test
        run: |
          cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && molecule test --scenario-name ${ANSIBLE_SUITE}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.molecule_distro }}
      - name: After script | Environment
        run: |
          set -x
          ansible --version
          ansible-config dump --only-changed -t all
          ansible-galaxy collection list || true
          ansible-galaxy role list || true
        if: ${{ always() }}
        continue-on-error: true
