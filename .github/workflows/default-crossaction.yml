---
# https://github.com/marketplace/actions/cross-platform-action
name: default-crossaction

on:
  push:
  pull_request:
  workflow_dispatch:

permissions: {}

jobs:
  test:
    permissions:
      contents: read
    runs-on: ${{ matrix.os.host }}
    continue-on-error: ${{ matrix.os.experimental }}
    strategy:
      matrix:
        os:
          - name: freebsd
            architecture: x86-64
            version: '14.2'
            host: ubuntu-latest
            experimental: true

          - name: netbsd
            architecture: x86-64
            version: '10.1'
            host: ubuntu-latest
            experimental: false

          - name: openbsd
            architecture: x86-64
            version: '7.6'
            host: ubuntu-latest
            experimental: false

    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.ANSIBLE_ROLE }}

      - name: Test on ${{ matrix.os.name }}
        uses: cross-platform-actions/action@fe0167d8082ac584754ef3ffb567fded22642c7d
        env:
          ANSIBLE_CALLBACKS_ENABLED: profile_tasks
          ANSIBLE_ROLE: juju4.adduser
          ANSIBLE_EXTRA_VARS: ''
          ANSIBLE_FORCE_COLOR: '1'
          PY_COLORS: '1'
        with:
          environment_variables: ANSIBLE_CALLBACKS_ENABLED ANSIBLE_ROLE ANSIBLE_EXTRA_VARS ANSIBLE_FORCE_COLOR PY_COLORS
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 5G
          cpu_count: 4
          run: |
            set -x
            whoami
            # freebsd
            sudo env ASSUME_ALWAYS_YES=YES pkg bootstrap || true
            sudo pkg install -y python3 py311-pip rust || true
            sudo pkg info || true
            # netbsd
            export PATH="/usr/pkg/sbin:/usr/pkg/bin:$PATH"
            export PKG_PATH="https://cdn.NetBSD.org/pub/pkgsrc/packages"
            export PKG_PATH="$PKG_PATH/OPSYS/ARCH/VERSIONS/All/"
            sudo pkg_add pkgin || true
            sudo pkgin -y install python311 py311-pip py311-cryptography rust openssl || true
            which python || true
            which python3 || true
            which python311 || true
            which python3.11 || true
            which pip || true
            which pip3 || true
            which pip3.11 || true
            which pip-3.11 || true
            [ -f /usr/pkg/bin/pip-3.11 ] && ln -s /usr/pkg/bin/pip-3.11 /usr/bin/pip
            python3 --version || true
            python3 -m pip install --upgrade pip || true
            python3.11 --version || true
            python3.11 -m pip install --upgrade pip || true
            export PATH=$PATH:/home/runner/.local/bin
            pip install molecule molecule-plugins docker ansible-lint flake8 testinfra ansible
            mkdir -p $HOME/.ansible/roles && ln -s $GITHUB_WORKSPACE/$ANSIBLE_ROLE $HOME/.ansible/roles/
            pip show ansible
            which ansible
            ansible --version
            ansible-config dump --only-changed -t all
            cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-galaxy install --timeout 120 --verbose -r molecule/default/requirements.yml
            ln -s . juju4.adduser
            # Environment
            uname -a
            pwd
            env
            # Run
            cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-playbook -i localhost, --connection=local --become -vvv molecule/default/converge.yml ${ANSIBLE_EXTRA_VARS}
            # Idempotency
            cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-playbook -i localhost, --connection=local --become -vvv molecule/default/converge.yml ${ANSIBLE_EXTRA_VARS} | tee /tmp/idempotency.log | grep -q 'changed=0.*failed=0'  && (echo 'Idempotence test: pass' && exit 0)  || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 0)
            # Verify
            cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-playbook -i localhost, --connection=local --become -vvv molecule/default/verify.yml ${ANSIBLE_EXTRA_VARS}
        if: ${{ matrix.os.name != 'openbsd' }}

      - name: Test on ${{ matrix.os.name }}
        uses: cross-platform-actions/action@fe0167d8082ac584754ef3ffb567fded22642c7d
        env:
          ANSIBLE_CALLBACKS_ENABLED: profile_tasks
          ANSIBLE_ROLE: juju4.adduser
          ANSIBLE_EXTRA_VARS: ''
          ANSIBLE_FORCE_COLOR: '1'
          PY_COLORS: '1'
        with:
          environment_variables: ANSIBLE_CALLBACKS_ENABLED ANSIBLE_ROLE ANSIBLE_EXTRA_VARS ANSIBLE_FORCE_COLOR PY_COLORS
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 5G
          cpu_count: 4
          run: |
            set -x
            whoami
            # openbsd
            sudo pkg_add -rIvx python3 py3-pip rust ansible ansible-lint || true
            which python || true
            which python3 || true
            which python311 || true
            which python3.11 || true
            which pip || true
            which pip3 || true
            which pip3.11 || true
            python3 --version || true
            python3 -m pip install --upgrade pip || true
            python3.11 --version || true
            python3.11 -m pip install --upgrade pip || true
            export PATH=$PATH:/home/runner/.local/bin
            mkdir -p $HOME/.ansible/roles && ln -s $GITHUB_WORKSPACE/$ANSIBLE_ROLE $HOME/.ansible/roles/
            pip show ansible
            which ansible
            ansible --version
            ansible-config dump --only-changed -t all
            cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-galaxy install --timeout 120 --verbose -r molecule/default/requirements.yml
            ln -s . juju4.adduser
            # Environment
            uname -a
            pwd
            env
            # Run
            cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-playbook -i localhost, --connection=local --become -vvv molecule/default/converge.yml ${ANSIBLE_EXTRA_VARS}
            # Idempotency
            cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-playbook -i localhost, --connection=local --become -vvv molecule/default/converge.yml ${ANSIBLE_EXTRA_VARS} | tee /tmp/idempotency.log | grep -q 'changed=0.*failed=0'  && (echo 'Idempotence test: pass' && exit 0)  || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 0)
            # Verify
            cd $GITHUB_WORKSPACE/$ANSIBLE_ROLE && ansible-playbook -i localhost, --connection=local --become -vvv molecule/default/verify.yml ${ANSIBLE_EXTRA_VARS}
        if: ${{ matrix.os.name == 'openbsd' }}
